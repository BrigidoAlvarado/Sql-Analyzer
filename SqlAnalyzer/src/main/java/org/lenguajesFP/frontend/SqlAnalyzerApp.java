/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/Application.java to edit this template
 */
package org.lenguajesFP.frontend;

import java.io.StringReader;
import java.util.List;
import org.lenguajesFP.backend.Data;
import org.lenguajesFP.backend.ErrorToken;
import org.lenguajesFP.backend.Token;
import org.lenguajesFP.backend.analyzers.StateAnalyzer;
import org.lenguajesFP.backend.jflex.LexycalAnalyzer;


/**
 *
 * @author brigidoalvarado
 */
public class SqlAnalyzerApp extends javax.swing.JFrame {

     private final SyntaxHighlighter syntaxHighlighther ;
    
    /**
     * Creates new form SqlAnalyzerApp
     */
    public SqlAnalyzerApp() {
        initComponents();
        syntaxHighlighther = new SyntaxHighlighter(inputjTxtAr);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        containerjPnl = new javax.swing.JPanel();
        containerButtonsjPnl = new javax.swing.JPanel();
        compilejBttn1 = new javax.swing.JButton();
        principaljScrllPn = new javax.swing.JScrollPane();
        inputjTxtAr = new javax.swing.JTextPane();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        cutMenuItem = new javax.swing.JMenuItem();
        copyMenuItem = new javax.swing.JMenuItem();
        pasteMenuItem = new javax.swing.JMenuItem();
        deleteMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentsMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        containerjPnl.setBackground(java.awt.SystemColor.controlHighlight);

        compilejBttn1.setText("Compile");
        compilejBttn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compilejBttn1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout containerButtonsjPnlLayout = new javax.swing.GroupLayout(containerButtonsjPnl);
        containerButtonsjPnl.setLayout(containerButtonsjPnlLayout);
        containerButtonsjPnlLayout.setHorizontalGroup(
            containerButtonsjPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerButtonsjPnlLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(compilejBttn1)
                .addContainerGap(576, Short.MAX_VALUE))
        );
        containerButtonsjPnlLayout.setVerticalGroup(
            containerButtonsjPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerButtonsjPnlLayout.createSequentialGroup()
                .addComponent(compilejBttn1)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        inputjTxtAr.setBackground(new java.awt.Color(253, 251, 251));
        principaljScrllPn.setViewportView(inputjTxtAr);

        javax.swing.GroupLayout containerjPnlLayout = new javax.swing.GroupLayout(containerjPnl);
        containerjPnl.setLayout(containerjPnlLayout);
        containerjPnlLayout.setHorizontalGroup(
            containerjPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerjPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(containerjPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(containerButtonsjPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(principaljScrllPn, javax.swing.GroupLayout.PREFERRED_SIZE, 680, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        containerjPnlLayout.setVerticalGroup(
            containerjPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerjPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(containerButtonsjPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(principaljScrllPn, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(containerjPnl, java.awt.BorderLayout.CENTER);

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        openMenuItem.setMnemonic('o');
        openMenuItem.setText("Open");
        fileMenu.add(openMenuItem);

        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText("Save");
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setMnemonic('a');
        saveAsMenuItem.setText("Save As ...");
        saveAsMenuItem.setDisplayedMnemonicIndex(5);
        fileMenu.add(saveAsMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        editMenu.setMnemonic('e');
        editMenu.setText("Edit");

        cutMenuItem.setMnemonic('t');
        cutMenuItem.setText("Cut");
        editMenu.add(cutMenuItem);

        copyMenuItem.setMnemonic('y');
        copyMenuItem.setText("Copy");
        editMenu.add(copyMenuItem);

        pasteMenuItem.setMnemonic('p');
        pasteMenuItem.setText("Paste");
        editMenu.add(pasteMenuItem);

        deleteMenuItem.setMnemonic('d');
        deleteMenuItem.setText("Delete");
        editMenu.add(deleteMenuItem);

        menuBar.add(editMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        contentsMenuItem.setMnemonic('c');
        contentsMenuItem.setText("Contents");
        helpMenu.add(contentsMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void compilejBttn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compilejBttn1ActionPerformed
        // TODO add your handling code here:
        analizar();
    }//GEN-LAST:event_compilejBttn1ActionPerformed

    private void analizar() {
        System.out.println("analizando");
        LexycalAnalyzer analyzer = new LexycalAnalyzer(new StringReader(inputjTxtAr.getText()));
        try {
            while (analyzer.yylex() != LexycalAnalyzer.YYEOF) {}
            List<Token> lista = analyzer.getTokensList();
            //pintar el text pain
            System.out.println("pintando");
            syntaxHighlighther.highlightTokens(lista);
            // se realiza el analisis sintactico
            StateAnalyzer stateAnalyzer = new StateAnalyzer(new Data(lista));
            stateAnalyzer.analyze();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JButton compilejBttn1;
    private javax.swing.JPanel containerButtonsjPnl;
    private javax.swing.JPanel containerjPnl;
    private javax.swing.JMenuItem contentsMenuItem;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JMenuItem deleteMenuItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JTextPane inputjTxtAr;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem pasteMenuItem;
    private javax.swing.JScrollPane principaljScrllPn;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    // End of variables declaration//GEN-END:variables

}
